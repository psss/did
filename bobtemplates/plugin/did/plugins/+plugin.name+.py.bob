#!/usr/bin/env python
# coding: utf-8
# Author: "{{{author.name}}}" <{{{author.email}}}>

from __future__ import unicode_literals, absolute_import

"""
{{{plugin.app}}} stats

Config example::

    [{{{plugin.name}}}]
    type = {{{plugin.name}}}
    # more config options
"""

from did.base import Stats, StatsGroup
from did.utils import Config, item


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  {{{plugin.app}}} Investigator
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class {{{plugin.app}}}{{{plugin.target}}}(object):
    """ {{{plugin.app}}} {{{plugin.target}}} investigator """

    def __init__(self, **kwargs):
        """ Initialize {{{plugin.target}}} """
        self.record = 'Testing ONE TWO THREE'

    def __unicode__(self):
        """ Summary for displaying """
        return "{0}".format(self.record)


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  {{{plugin.app}}} Stats
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class {{{plugin.target}}}{{{plugin.verb}}}(Stats):
    """ {{{plugin.app}}} changes """
    def __init__(self, option='cards', name=None, parent=None):
        super({{{plugin.target}}}{{{plugin.verb}}}, self).__init__(option, name, parent)

    def fetch(self):
        if self.option == 'cards':
           self.stats.append('CARD #X: DONE')
        else:
           self.stats.append('UNKNOWN: UNKNOWN')


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  {{{plugin.app}}} Stats Group
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class {{{plugin.app}}}Stats(StatsGroup):
    """ {{{plugin.app}}} aggregated stats """

    # Default order
    order = {{{plugin.sort_order}}}

    def __init__(self, option, name=None, parent=None):
        super({{{plugin.app}}}Stats, self).__init__(option, name, parent)
        self.stats.append(
	    {{{plugin.target}}}{{{plugin.verb}}}(parent=self)
	)
